{"./":{"url":"./","title":"简介","keywords":"","body":"Procfs Procfs 是 Linux 所特有的伪文件系统（pseudo file system）。 为了更便捷地获取和（或）修改内核属性，Linux 提供了一个 proc 伪文件系统，该文件系统驻留于 /proc 目录，包含了各种用于展示内核信息的文件。 之所以将 proc 称为伪文件系统（pseudo：假的；伪的），是因为其包含的文件并未存储在磁盘上，而是由内核在进程访问此类信息时动态创建而成。 目录层级 子目录 描述 /proc/ 系统相关信息 /proc/[pid]/ 进程相关信息 /proc/net/ 网络和套接字的状态信息 /proc/sys/fs/ 文件系统相关设置 /proc/sys/kernel/ 常规的内核设置 /proc/sys/net/ 网络和套接字的设置 /proc/sys/vm/ 内存管理设置 /proc/sysvipc/ System V IPC 对象信息 symlink 描述 示例 mounts mounts -> self/mounts self self -> 795328 thread-self thread-self -> 795328/task/795328 子文件 描述 查看和修改 $ echo 1000000 > /proc/sys/kernel/pid_max $ cat /pro/sys/kernel/pid_max 注意： /proc 目录下的一些文件是只读的，仅用于显示内核信息，但无法对其进行修改，多见于 /proc/[pid]/ 目录下的文件 /proc 目录下的一些文件仅能有文件拥有者（或特权级进程）读取 除 /proc/[pid]/ 子目录下的文件，/proc 目录的其他文件大多属于 root 用户 相关 # 手册页 $ man 5 proc # Debian $ apt-get install procinfo $ lsdev $ procinfo 示例 $ tree -L 1 ├── acpi │ └── wakeup ├── asound │ ├── card0 │ ├── card1 │ ├── cards │ ├── devices │ ├── hwdep │ ├── modules │ ├── NVidia -> card1 │ ├── oss │ ├── PCH -> card0 │ ├── pcm │ ├── seq │ ├── timers │ └── version ├── buddyinfo ├── bus │ ├── input │ └── pci ├── cgroups ├── cmdline ├── consoles ├── cpuinfo ├── crypto ├── devices ├── diskstats ├── dma ├── driver │ └── rtc ├── execdomains ├── fb ├── filesystems ├── fs │ ├── aufs │ ├── ext4 │ ├── fscache │ ├── jbd2 │ ├── lockd │ ├── nfs │ ├── nfsd │ ├── nfsfs │ └── xfs ├── interrupts ├── iomem ├── ioports ├── irq │ ├── 0 │ ├── 1 │ ├── 10 │ ├── 11 │ ├── 12 │ ├── 13 │ ├── 14 │ ├── 15 │ ├── 16 │ ├── 17 │ ├── 2 │ ├── 23 │ ├── 25 │ ├── 26 │ ├── 27 │ ├── 28 │ ├── 29 │ ├── 3 │ ├── 30 │ ├── 4 │ ├── 5 │ ├── 6 │ ├── 7 │ ├── 8 │ ├── 9 │ └── default_smp_affinity ├── kallsyms ├── kcore ├── keys ├── key-users ├── kmsg ├── kpagecgroup ├── kpagecount ├── kpageflags ├── loadavg ├── locks ├── mdstat ├── meminfo ├── misc ├── modules ├── mounts -> self/mounts ├── mtrr ├── net -> self/net ├── pagetypeinfo ├── partitions ├── sched_debug ├── schedstat ├── scsi │ ├── device_info │ ├── scsi │ ├── sg │ └── usb-storage ├── self -> 795328 ├── slabinfo ├── softirqs ├── stat ├── swaps ├── sys │ ├── abi │ ├── debug │ ├── dev │ ├── fs │ ├── fscache │ ├── kernel │ ├── net │ ├── sunrpc │ └── vm ├── sysrq-trigger ├── sysvipc │ ├── msg │ ├── sem │ └── shm ├── thread-self -> 795328/task/795328 ├── timer_list ├── timer_stats ├── tty │ ├── driver │ ├── drivers │ ├── ldisc │ └── ldiscs ├── uptime ├── version ├── version_signature ├── vmallocinfo ├── vmstat └── zoneinfo 内核代码 /* * * * * */ 挂载 procfs 运行时手动挂载： # /proc 是标准挂载点 # 尝试改变挂载点会发现两者的内容一致：sudo mount -t proc proc /tmp/proc $ sudo mount -t proc proc /proc 引导时自动挂载： $ sudo vi /etc/fstab proc /proc proc noauto 0 0 LICENSE Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-12 "},"buddyinfo.html":{"url":"buddyinfo.html","title":"buddyinfo","keywords":"","body":"/proc/buddyinfo Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-12 "},"cgroups.html":{"url":"cgroups.html","title":"cgroups","keywords":"","body":"/proc/cgroups 示例 $ cat /proc/cgroups ------------------- #subsys_name hierarchy num_cgroups enabled cpuset 1 15 1 cpu 2 17 1 cpuacct 3 15 1 blkio 4 15 1 memory 5 15 1 devices 6 15 1 freezer 7 15 1 net_cls 8 15 1 perf_event 9 15 1 net_prio 10 15 1 hugetlb 11 15 1 pids 12 6 1 Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-12 "},"cmdline.html":{"url":"cmdline.html","title":"cmdline","keywords":"","body":"/proc/cmdline 示例解读 $ cat /proc/cmdline BOOT_IMAGE=/boot/vmlinuz-4.4.0-121-generic root=UUID=07003934-f200-4c54-a4bb-8c82093a285f ro quiet splash vt.handoff=7 Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-12 "},"consoles.html":{"url":"consoles.html","title":"consoles","keywords":"","body":"/proc/consoles Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-12 "},"cpuinfo.html":{"url":"cpuinfo.html","title":"cpuinfo","keywords":"","body":"/proc/cpuinfo $ cat /proc/cpuinfo ------------------- processor : 0 vendor_id : GenuineIntel cpu family : 6 model : 42 model name : Intel(R) Core(TM) i5-2320 CPU @ 3.00GHz stepping : 7 microcode : 0x28 cpu MHz : 2298.984 cache size : 6144 KB physical id : 0 siblings : 4 core id : 0 cpu cores : 4 apicid : 0 initial apicid : 0 fpu : yes fpu_exception : yes cpuid level : 13 wp : yes flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf eagerfpu pni pclmulqdq dtes64 monitor ds_cpl vmx est tm2 ssse3 cx16 xtpr pdcm pcid sse4_1 sse4_2 popcnt tsc_deadline_timer aes xsave avx lahf_lm epb retpoline kaiser tpr_shadow vnmi flexpriority ept vpid xsaveopt dtherm ida arat pln pts bugs : cpu_meltdown spectre_v1 spectre_v2 bogomips : 5986.15 clflush size : 64 cache_alignment : 64 address sizes : 36 bits physical, 48 bits virtual power management: Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-12 "},"crypto.html":{"url":"crypto.html","title":"crypto","keywords":"","body":"/proc/crypto Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-12 "},"devices.html":{"url":"devices.html","title":"devices","keywords":"","body":"/proc/devices Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-12 "},"diskstats.html":{"url":"diskstats.html","title":"diskstats","keywords":"","body":"/proc/diskstats Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-12 "},"dma.html":{"url":"dma.html","title":"dma","keywords":"","body":"/proc/dma Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-12 "},"execdomains.html":{"url":"execdomains.html","title":"execdomains","keywords":"","body":"/proc/execdomains Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-12 "},"fb.html":{"url":"fb.html","title":"fb","keywords":"","body":"/proc/fb Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-12 "},"filesystems.html":{"url":"filesystems.html","title":"filesystems","keywords":"","body":"/proc/filesystems 显示内核所知道的文件系统类型。 示例 $ cat /proc/filesystems nodev sysfs nodev rootfs nodev ramfs nodev bdev nodev proc nodev cgroup nodev cpuset nodev tmpfs nodev devtmpfs nodev debugfs nodev securityfs nodev sockfs nodev dax nodev bpf nodev pipefs nodev anon_inodefs nodev configfs nodev devpts nodev hugetlbfs nodev autofs nodev pstore nodev mqueue nodev selinuxfs nodev rpc_pipefs xfs iso9660 nodev overlay Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-12 "},"interrupts.html":{"url":"interrupts.html","title":"interrupts","keywords":"","body":"/proc/interrupts Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-12 "},"iomem.html":{"url":"iomem.html","title":"iomem","keywords":"","body":"/proc/iomem Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-12 "},"ioports.html":{"url":"ioports.html","title":"ioports","keywords":"","body":"/proc/ioports Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-12 "},"kallsyms.html":{"url":"kallsyms.html","title":"kallsyms","keywords":"","body":"/proc/kallsyms 提供了内核所有符号的内存地址 示例 $ cat /proc/kallsyms | head -n 10 0000000000000000 A irq_stack_union 0000000000000000 A __per_cpu_start 0000000000000000 A __per_cpu_user_mapped_start 0000000000004000 A vector_irq 0000000000004800 A unsafe_stack_register_backup 0000000000004840 A cpu_debug_store 00000000000048c0 A cpu_tss 0000000000007000 A exception_stacks 000000000000c000 A gdt_page 000000000000d000 A espfix_waddr Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-12 "},"kcore.html":{"url":"kcore.html","title":"kcore","keywords":"","body":"/proc/kcore Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-12 "},"key-users.html":{"url":"key-users.html","title":"key-users","keywords":"","body":"/proc/key-users Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-12 "},"keys.html":{"url":"keys.html","title":"keys","keywords":"","body":"/proc/keys Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-12 "},"kmsg.html":{"url":"kmsg.html","title":"kmsg","keywords":"","body":"/proc/kmsg Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-12 "},"kpagecgroup.html":{"url":"kpagecgroup.html","title":"kpagecgroup","keywords":"","body":"/proc/kpagecgroup Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-12 "},"kpagecount.html":{"url":"kpagecount.html","title":"kpagecount","keywords":"","body":"/proc/kpagecount Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-12 "},"kpageflags.html":{"url":"kpageflags.html","title":"kpageflags","keywords":"","body":"/proc/kpageflags Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-12 "},"loadavg.html":{"url":"loadavg.html","title":"loadavg","keywords":"","body":"/proc/loadavg Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-12 "},"locks.html":{"url":"locks.html","title":"locks","keywords":"","body":"/proc/locks Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-12 "},"mdstat.html":{"url":"mdstat.html","title":"mdstat","keywords":"","body":"/proc/mdstat Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-12 "},"meminfo.html":{"url":"meminfo.html","title":"meminfo","keywords":"","body":"/proc/meminfo $ cat /proc/meminfo ------------------- MemTotal: 32901432 kB MemFree: 10647220 kB MemAvailable: 13678540 kB Buffers: 309368 kB Cached: 2685184 kB SwapCached: 9040 kB Active: 10006600 kB Inactive: 2120928 kB Active(anon): 8546868 kB Inactive(anon): 1117884 kB Active(file): 1459732 kB Inactive(file): 1003044 kB Unevictable: 8608532 kB Mlocked: 8608532 kB SwapTotal: 20971516 kB SwapFree: 20778636 kB Dirty: 328 kB Writeback: 0 kB AnonPages: 17733112 kB Mapped: 864128 kB Shmem: 506560 kB Slab: 1075112 kB SReclaimable: 969208 kB SUnreclaim: 105904 kB KernelStack: 45152 kB PageTables: 193812 kB NFS_Unstable: 0 kB Bounce: 0 kB WritebackTmp: 0 kB CommitLimit: 37422232 kB Committed_AS: 47001924 kB VmallocTotal: 34359738367 kB VmallocUsed: 0 kB VmallocChunk: 0 kB HardwareCorrupted: 0 kB AnonHugePages: 0 kB CmaTotal: 0 kB CmaFree: 0 kB HugePages_Total: 0 HugePages_Free: 0 HugePages_Rsvd: 0 HugePages_Surp: 0 Hugepagesize: 2048 kB DirectMap4k: 869320 kB DirectMap2M: 32638976 kB Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-12 "},"misc.html":{"url":"misc.html","title":"misc","keywords":"","body":"/proc/misc Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-12 "},"modules.html":{"url":"modules.html","title":"modules","keywords":"","body":"/proc/modules Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-12 "},"mounts.html":{"url":"mounts.html","title":"mounts","keywords":"","body":"/proc/mounts 包含当前已挂载文件系统的信息 相关命令 以下命令会读写该文件的信息： mount df 示例 $ cat /proc/mounts rootfs / rootfs rw 0 0 sysfs /sys sysfs rw,seclabel,nosuid,nodev,noexec,relatime 0 0 proc /proc proc rw,nosuid,nodev,noexec,relatime 0 0 devtmpfs /dev devtmpfs rw,seclabel,nosuid,size=484648k,nr_inodes=121162,mode=755 0 0 securityfs /sys/kernel/security securityfs rw,nosuid,nodev,noexec,relatime 0 0 tmpfs /dev/shm tmpfs rw,seclabel,nosuid,nodev 0 0 devpts /dev/pts devpts rw,seclabel,nosuid,noexec,relatime,gid=5,mode=620,ptmxmode=000 0 0 tmpfs /run tmpfs rw,seclabel,nosuid,nodev,mode=755 0 0 tmpfs /sys/fs/cgroup tmpfs ro,seclabel,nosuid,nodev,noexec,mode=755 0 0 cgroup /sys/fs/cgroup/systemd cgroup rw,seclabel,nosuid,nodev,noexec,relatime,xattr,release_agent=/usr/lib/systemd/systemd-cgroups-agent,name=systemd 0 0 pstore /sys/fs/pstore pstore rw,nosuid,nodev,noexec,relatime 0 0 cgroup /sys/fs/cgroup/memory cgroup rw,seclabel,nosuid,nodev,noexec,relatime,memory 0 0 cgroup /sys/fs/cgroup/perf_event cgroup rw,seclabel,nosuid,nodev,noexec,relatime,perf_event 0 0 cgroup /sys/fs/cgroup/net_cls,net_prio cgroup rw,seclabel,nosuid,nodev,noexec,relatime,net_prio,net_cls 0 0 cgroup /sys/fs/cgroup/freezer cgroup rw,seclabel,nosuid,nodev,noexec,relatime,freezer 0 0 cgroup /sys/fs/cgroup/pids cgroup rw,seclabel,nosuid,nodev,noexec,relatime,pids 0 0 cgroup /sys/fs/cgroup/blkio cgroup rw,seclabel,nosuid,nodev,noexec,relatime,blkio 0 0 cgroup /sys/fs/cgroup/hugetlb cgroup rw,seclabel,nosuid,nodev,noexec,relatime,hugetlb 0 0 cgroup /sys/fs/cgroup/cpu,cpuacct cgroup rw,seclabel,nosuid,nodev,noexec,relatime,cpuacct,cpu 0 0 cgroup /sys/fs/cgroup/cpuset cgroup rw,seclabel,nosuid,nodev,noexec,relatime,cpuset 0 0 cgroup /sys/fs/cgroup/devices cgroup rw,seclabel,nosuid,nodev,noexec,relatime,devices 0 0 configfs /sys/kernel/config configfs rw,relatime 0 0 /dev/vda1 / xfs rw,seclabel,relatime,attr2,inode64,noquota 0 0 rpc_pipefs /var/lib/nfs/rpc_pipefs rpc_pipefs rw,relatime 0 0 selinuxfs /sys/fs/selinux selinuxfs rw,relatime 0 0 systemd-1 /proc/sys/fs/binfmt_misc autofs rw,relatime,fd=28,pgrp=1,timeout=0,minproto=5,maxproto=5,direct,pipe_ino=15562 0 0 mqueue /dev/mqueue mqueue rw,seclabel,relatime 0 0 hugetlbfs /dev/hugepages hugetlbfs rw,seclabel,relatime 0 0 debugfs /sys/kernel/debug debugfs rw,relatime 0 0 overlay /var/lib/docker/overlay2/74da581c081eda43d804a227d31a95695ce4995f0e77528a37f0eb7424d41b6f/merged overlay rw,seclabel,relatime,lowerdir=/var/lib/docker/overlay2/l/A5O4QFJ4WCSUA4JQOHKQZL624U:/var/lib/docker/overlay2/l/LB2M7UAZ6XES4GATJT7DK3PHDZ:/var/lib/docker/overlay2/l/62LVWRWLAK3FOR5RJLSAQXOA35:/var/lib/docker/overlay2/l/ULJQPRT6RPVNN6BXQHUTZ6AYCZ,upperdir=/var/lib/docker/overlay2/74da581c081eda43d804a227d31a95695ce4995f0e77528a37f0eb7424d41b6f/diff,workdir=/var/lib/docker/overlay2/74da581c081eda43d804a227d31a95695ce4995f0e77528a37f0eb7424d41b6f/work 0 0 overlay /var/lib/docker/overlay2/5856ead72705c85f5dc2333b222db87e663827e6bd2ac29b31167361498e92f7/merged overlay rw,seclabel,relatime,lowerdir=/var/lib/docker/overlay2/l/2WZVH4C4YFGKSB5E45X6CUULM3:/var/lib/docker/overlay2/l/LB2M7UAZ6XES4GATJT7DK3PHDZ:/var/lib/docker/overlay2/l/62LVWRWLAK3FOR5RJLSAQXOA35:/var/lib/docker/overlay2/l/ULJQPRT6RPVNN6BXQHUTZ6AYCZ,upperdir=/var/lib/docker/overlay2/5856ead72705c85f5dc2333b222db87e663827e6bd2ac29b31167361498e92f7/diff,workdir=/var/lib/docker/overlay2/5856ead72705c85f5dc2333b222db87e663827e6bd2ac29b31167361498e92f7/work 0 0 proc /run/docker/netns/default proc rw,nosuid,nodev,noexec,relatime 0 0 shm /var/lib/docker/containers/9d229f9a0fd6a1b6e9c822d1b8e94aea59add6e559479ee6d06edf26cc16587c/mounts/shm tmpfs rw,seclabel,nosuid,nodev,noexec,relatime,size=65536k 0 0 shm /var/lib/docker/containers/2e520b806e847735fcf4b3fe5db634bb9b5a4cc2161a384f361de018003d14d5/mounts/shm tmpfs rw,seclabel,nosuid,nodev,noexec,relatime,size=65536k 0 0 proc /run/docker/netns/3816f2463f3d proc rw,nosuid,nodev,noexec,relatime 0 0 fusectl /sys/fs/fuse/connections fusectl rw,relatime 0 0 tmpfs /run/user/0 tmpfs rw,seclabel,nosuid,nodev,relatime,size=101504k,mode=700 0 0 Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-12 "},"mtrr.html":{"url":"mtrr.html","title":"mtrr","keywords":"","body":"/proc/mtrr Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-12 "},"pagetypeinfo.html":{"url":"pagetypeinfo.html","title":"pagetypeinfo","keywords":"","body":"/proc/pagetypeinfo Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-12 "},"partitions.html":{"url":"partitions.html","title":"partitions","keywords":"","body":"/proc/partitions 记录了每个磁盘分区的 主设备号、副设备号、大小 和 名称。 $ cat /proc/partitions major minor #blocks name 7 0 166764 loop0 7 1 88980 loop1 7 2 89024 loop2 7 3 88964 loop3 7 4 391672 loop4 7 5 176632 loop5 7 6 259556 loop6 7 7 346216 loop7 8 0 976762584 sda 8 1 104859648 sda1 8 2 564700160 sda2 8 3 307197952 sda3 8 16 117220824 sdb 8 17 117218304 sdb1 11 0 1048575 sr0 Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-12 "},"sched_debug.html":{"url":"sched_debug.html","title":"sched","keywords":"","body":"/proc/sched_debug Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-12 "},"schedstat.html":{"url":"schedstat.html","title":"schedstat","keywords":"","body":"/proc/schedstat Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-12 "},"self.html":{"url":"self.html","title":"self","keywords":"","body":"/proc/self 指向当前进程的 proc 目录，即 /proc/[pid]。 示例 # 重复执行，发现 PID 在增加 $ ls -l /proc/self # 相当于 ls -l /proc/12427 lrwxrwxrwx. 1 root root 0 7月 5 02:53 /proc/self -> 12427 $ ls -l /proc/self/mounts -r--r--r--. 1 root root 0 7月 22 08:11 /proc/self/mounts Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-12 "},"slabinfo.html":{"url":"slabinfo.html","title":"slabinfo","keywords":"","body":"/proc/slabinfo Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-12 "},"softirqs.html":{"url":"softirqs.html","title":"softirqs","keywords":"","body":"/proc/softirqs Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-12 "},"stat.html":{"url":"stat.html","title":"stat","keywords":"","body":"/proc/stat Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-12 "},"swaps.html":{"url":"swaps.html","title":"swaps","keywords":"","body":"/proc/swaps 显示系统已激活的交换区域（Swap Area）的信息，包括每个交换区域的大小，以及正在使用交换区域的个数。 示例 $ cat /proc/swaps Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-12 "},"sysrq-trigger.html":{"url":"sysrq-trigger.html","title":"sysrq-trigger","keywords":"","body":"/proc/sysrq-trigger Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-12 "},"timer_list.html":{"url":"timer_list.html","title":"timer","keywords":"","body":"/proc/timer_list Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-12 "},"timer_stats.html":{"url":"timer_stats.html","title":"timer","keywords":"","body":"/proc/timer_stats Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-12 "},"uptime.html":{"url":"uptime.html","title":"uptime","keywords":"","body":"/proc/uptime $ cat /proc/uptime ------------------ 1390581.56 4948939.54 1390581.56 - 内核启动后运行的秒数 4948939.54 - 内核启动后 idle 模式的秒数 相关 $ uptime -------- 16:06:12 up 16 days, 2:16, 8 users, load average: 0.42, 0.46, 0.54 Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-12 "},"version.html":{"url":"version.html","title":"version","keywords":"","body":"/proc/version $ cat /proc/version ------------------- Linux version 4.4.0-121-generic (buildd@lgw01-amd64-032) (gcc version 4.8.4 (Ubuntu 4.8.4-2ubuntu1~14.04.4) ) #145~14.04.1-Ubuntu SMP Mon Apr 16 18:40:43 UTC 2018 Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-12 "},"version_signature.html":{"url":"version_signature.html","title":"version","keywords":"","body":"/proc/version_signature Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-12 "},"vmallocinfo.html":{"url":"vmallocinfo.html","title":"vmallocinfo","keywords":"","body":"/proc/vmallocinfo Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-12 "},"vminfo.html":{"url":"vminfo.html","title":"vminfo","keywords":"","body":"/proc/vminfo 参数 参数 描述 MemTotal 总的可用内存，即物理内存减去一些保留位和内核二进制代码（/boot/vmlinuz）运行时所占用的内存 示例 MemTotal: 1015008 kB MemFree: 123692 kB MemAvailable: 611748 kB Buffers: 2396 kB Cached: 604204 kB SwapCached: 0 kB Active: 432736 kB Inactive: 289716 kB Active(anon): 121432 kB Inactive(anon): 20480 kB Active(file): 311304 kB Inactive(file): 269236 kB Unevictable: 0 kB Mlocked: 0 kB SwapTotal: 0 kB SwapFree: 0 kB Dirty: 24 kB Writeback: 0 kB AnonPages: 115884 kB Mapped: 68564 kB Shmem: 26060 kB Slab: 115004 kB SReclaimable: 70584 kB SUnreclaim: 44420 kB KernelStack: 2816 kB PageTables: 5324 kB NFS_Unstable: 0 kB Bounce: 0 kB WritebackTmp: 0 kB CommitLimit: 507504 kB Committed_AS: 613856 kB VmallocTotal: 34359738367 kB VmallocUsed: 90256 kB VmallocChunk: 34359537660 kB HardwareCorrupted: 0 kB AnonHugePages: 16384 kB CmaTotal: 0 kB CmaFree: 0 kB HugePages_Total: 0 HugePages_Free: 0 HugePages_Rsvd: 0 HugePages_Surp: 0 Hugepagesize: 2048 kB DirectMap4k: 79844 kB DirectMap2M: 968704 kB DirectMap1G: 0 kB Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-12 "},"vmstat.html":{"url":"vmstat.html","title":"vmstat","keywords":"","body":"/proc/vmstat Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-12 "},"zoneinfo.html":{"url":"zoneinfo.html","title":"zoneinfo","keywords":"","body":"/proc/zoneinfo Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-12 "},"[pid]/":{"url":"[pid]/","title":".","keywords":"","body":"/proc/[pid]/ 内核为系统中的每个进程都提供了相应的目录 /proc/[pid]/，该目录包含了进程的相关信息。 目录层级 路径 文件类型 描述 示例 /proc/[pid]/cmdline - 启动进程时执行的命令行（包括命令及参数）；以 \\0 分隔 pythonmain.py /proc/[pid]/cwd l 指向进程当前工作目录（Current Work Directory）的符号链接 cwd -> /proc/843054/ /proc/[pid]/environ - 作用于该进程的环境变量列表；以 \\0 分隔的 NAME=VALUE 键值对列表 ~ /proc/[pid]/exe l 启动该进程之初的可执行文件的符号链接（相当于 cmdline 命令部分的符号链接） exe -> /home/yin/anaconda3/bin/python3.6* /proc/[pid]/fd/ d 包含该进程打开的文件描述符的符号链接 /proc/[pid]/fdinfo/ d 包含该进程打开的文件描述符的位置和标记 /proc/[pid]/maps - 包含内存映射文件与块的信息（如堆和栈） /proc/[pid]/mem - 进程虚拟内存（在 I/O 操作之前必须调用 lseek() 移动到有效偏移量） /proc/[pid]/mounts - 进程的挂载情况 /proc/[pid]/root l 进程根目录的符号链接 /proc/[pid]/status - 进程相关信息（如：PID、凭证、内存使用量、信号） /proc/[pid]/task/ d 进程中的每个线程对应一个子目录 特殊进程目录 /proc/1/ - init 进程的目录 /proc/$$/ - 解释该命令的 shell 进程的目录 /proc/self - 指向当前进程自己的 /proc/[pid] 目录 示例 # 当前进程的相关信息 $ ll /proc/$$ ------------- dr-xr-xr-x 9 root root 0 5月 28 15:57 ./ dr-xr-xr-x 518 root root 0 5月 13 21:49 ../ dr-xr-xr-x 2 root root 0 5月 28 15:57 attr/ -rw-r--r-- 1 root root 0 5月 28 15:57 autogroup -r-------- 1 root root 0 5月 28 15:57 auxv -r--r--r-- 1 root root 0 5月 28 15:57 cgroup --w------- 1 root root 0 5月 28 15:57 clear_refs -r--r--r-- 1 root root 0 5月 28 15:57 cmdline -rw-r--r-- 1 root root 0 5月 28 15:57 comm -rw-r--r-- 1 root root 0 5月 28 15:57 coredump_filter -r--r--r-- 1 root root 0 5月 28 15:57 cpuset lrwxrwxrwx 1 root root 0 5月 28 15:57 cwd -> /root/ -r-------- 1 root root 0 5月 28 15:57 environ lrwxrwxrwx 1 root root 0 5月 28 15:57 exe -> /bin/bash* dr-x------ 2 root root 0 5月 28 15:57 fd/ dr-x------ 2 root root 0 5月 28 15:57 fdinfo/ -rw-r--r-- 1 root root 0 5月 28 15:57 gid_map -r-------- 1 root root 0 5月 28 15:57 io -r--r--r-- 1 root root 0 5月 28 15:57 limits -rw-r--r-- 1 root root 0 5月 28 15:57 loginuid dr-x------ 2 root root 0 5月 28 15:57 map_files/ -r--r--r-- 1 root root 0 5月 28 15:57 maps -rw------- 1 root root 0 5月 28 15:57 mem -r--r--r-- 1 root root 0 5月 28 15:57 mountinfo -r--r--r-- 1 root root 0 5月 28 15:57 mounts -r-------- 1 root root 0 5月 28 15:57 mountstats dr-xr-xr-x 7 root root 0 5月 28 15:57 net/ dr-x--x--x 2 root root 0 5月 28 15:57 ns/ -r--r--r-- 1 root root 0 5月 28 15:57 numa_maps -rw-r--r-- 1 root root 0 5月 28 15:57 oom_adj -r--r--r-- 1 root root 0 5月 28 15:57 oom_score -rw-r--r-- 1 root root 0 5月 28 15:57 oom_score_adj -r-------- 1 root root 0 5月 28 15:57 pagemap -r-------- 1 root root 0 5月 28 15:57 personality -rw-r--r-- 1 root root 0 5月 28 15:57 projid_map lrwxrwxrwx 1 root root 0 5月 28 15:57 root -> // -rw-r--r-- 1 root root 0 5月 28 15:57 sched -r--r--r-- 1 root root 0 5月 28 15:57 schedstat -r--r--r-- 1 root root 0 5月 28 15:57 sessionid -rw-r--r-- 1 root root 0 5月 28 15:57 setgroups -r--r--r-- 1 root root 0 5月 28 15:57 smaps -r-------- 1 root root 0 5月 28 15:57 stack -r--r--r-- 1 root root 0 5月 28 15:57 stat -r--r--r-- 1 root root 0 5月 28 15:57 statm -r--r--r-- 1 root root 0 5月 28 15:57 status -r-------- 1 root root 0 5月 28 15:57 syscall dr-xr-xr-x 3 root root 0 5月 28 15:57 task/ -r--r--r-- 1 root root 0 5月 28 15:57 timers -rw-r--r-- 1 root root 0 5月 28 15:57 uid_map -r--r--r-- 1 root root 0 5月 28 15:57 wchan Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-12 "},"[pid]/cgroup.html":{"url":"[pid]/cgroup.html","title":"cgroup","keywords":"","body":"/proc/[pid]/cgroup 描述进程（即任务）所属的「控制组 cgroup」 示例 $ cat /proc/self/cgroup 11:devices:/user.slice 10:cpuset:/ 9:cpuacct,cpu:/user.slice 8:hugetlb:/ 7:blkio:/user.slice 6:pids:/user.slice 5:freezer:/ 4:net_prio,net_cls:/ 3:perf_event:/ 2:memory:/user.slice 1:name=systemd:/user.slice/user-0.slice/session-1270.scope Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-12 "},"[pid]/cwd.html":{"url":"[pid]/cwd.html","title":"cwd","keywords":"","body":"/proc/[pid]/cwd 该文件是一个符号链接，链向的是进程的当前工作目录。当前工作目录对解释相对路径名提供了参照点。 示例 $ ls -l /proc/self/cwd lrwxrwxrwx. 1 root root 0 7月 22 14:42 /proc/self/cwd -> /root Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-12 "},"[pid]/environ.html":{"url":"[pid]/environ.html","title":"environ","keywords":"","body":"/proc/[pid]/environ 示例 $ cat /proc/1/environ HOME=/init=/sbin/initrecovery=TERM=linuxBOOT_IMAGE=/boot/vmlinuz-4.4.0-121-genericPATH=/sbin:/usr/sbin:/bin:/usr/binPWD=/rootmnt=/root Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-12 "},"[pid]/fd/":{"url":"[pid]/fd/","title":"fd","keywords":"","body":"/proc/[pid]/fd/ /proc/[pid]/fd/ 目录为进程打开的每个文件描述符都包含一个符号链接，每个符号链接的名称与文件描述符的数值相匹配。 示例 # Linux & macOS $ ls | wc -l /dev/fd/0 # 在 Linux 上等同于：ls | wc -l /proc/self/fd/0 Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-12 "},"[pid]/fdinfo/":{"url":"[pid]/fdinfo/","title":"fdinfo","keywords":"","body":"/proc/[pid]/fdinfo/ 包含进程打开的所有文件描述符的信息，每一个已打开的文件描述符对应一个文件，并以文件描述符的数值来命名。例如，/proc/self/fdinfo/1 表示当前进程打开的文件描述符 1 的相关信息。 该目录下的所有文件均只读 文件内容 字段 描述 示例 pos 当前的文件偏移量 pos: 0 flags 文件的访问模式（只读、只写、读写）和打开文件的状态标志（open() 系统调用的 flags 参数）；由八进制数来表示 flags: 0100002 mnt_id mnt_id: 23 clockid clockid: 1 ticks ticks: 0 settime flags settime flags: 01 it_value it_value: (107, 206068399) it_interval it_interval: (0, 0) tfd tfd: 5 events events: 19 data data: 5588c80d6280 sigmask sigmask: 7be3c0fe28014a03 inotify inotify wd:1 ino:1fcd sdev:14 mask:80 ignored_mask:0 fhandle-bytes:c fhandle-type:1 f_handle:b9bb1e5dcd1f000000000000 示例 $ ls -l /proc/self/fdinfo/1 -r--------. 1 root root 0 7月 23 10:25 /proc/self/fdinfo/1 $ cat /proc/self/fdinfo/1 pos: 0 flags: 0100002 mnt_id: 23 $ find /proc/1/fdinfo -type f | xargs cat Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-12 "},"[pid]/map_files/":{"url":"[pid]/map_files/","title":"map_files","keywords":"","body":"/proc/[pid]/map_files/ 示例 $ ls -l /proc/self/map_files/ lr--------. 1 root root 64 8月 25 03:10 400000-41a000 -> /usr/bin/ls lr--------. 1 root root 64 8月 25 03:10 61a000-61b000 -> /usr/bin/ls lr--------. 1 root root 64 8月 25 03:10 61b000-61c000 -> /usr/bin/ls lr--------. 1 root root 64 8月 25 03:10 7f2541901000-7f254190d000 -> /usr/lib64/libnss_files-2.17.so lr--------. 1 root root 64 8月 25 03:10 7f254190d000-7f2541b0c000 -> /usr/lib64/libnss_files-2.17.so lr--------. 1 root root 64 8月 25 03:10 7f2541b0c000-7f2541b0d000 -> /usr/lib64/libnss_files-2.17.so lr--------. 1 root root 64 8月 25 03:10 7f2541b0d000-7f2541b0e000 -> /usr/lib64/libnss_files-2.17.so lr--------. 1 root root 64 8月 25 03:10 7f2541b14000-7f254803e000 -> /usr/lib/locale/locale-archive lr--------. 1 root root 64 8月 25 03:10 7f254803e000-7f2548055000 -> /usr/lib64/libpthread-2.17.so lr--------. 1 root root 64 8月 25 03:10 7f2548055000-7f2548254000 -> /usr/lib64/libpthread-2.17.so lr--------. 1 root root 64 8月 25 03:10 7f2548254000-7f2548255000 -> /usr/lib64/libpthread-2.17.so lr--------. 1 root root 64 8月 25 03:10 7f2548255000-7f2548256000 -> /usr/lib64/libpthread-2.17.so lr--------. 1 root root 64 8月 25 03:10 7f254825a000-7f254825e000 -> /usr/lib64/libattr.so.1.1.0 lr--------. 1 root root 64 8月 25 03:10 7f254825e000-7f254845d000 -> /usr/lib64/libattr.so.1.1.0 lr--------. 1 root root 64 8月 25 03:10 7f254845d000-7f254845e000 -> /usr/lib64/libattr.so.1.1.0 lr--------. 1 root root 64 8月 25 03:10 7f254845e000-7f254845f000 -> /usr/lib64/libattr.so.1.1.0 lr--------. 1 root root 64 8月 25 03:10 7f254845f000-7f2548461000 -> /usr/lib64/libdl-2.17.so lr--------. 1 root root 64 8月 25 03:10 7f2548461000-7f2548661000 -> /usr/lib64/libdl-2.17.so lr--------. 1 root root 64 8月 25 03:10 7f2548661000-7f2548662000 -> /usr/lib64/libdl-2.17.so lr--------. 1 root root 64 8月 25 03:10 7f2548662000-7f2548663000 -> /usr/lib64/libdl-2.17.so lr--------. 1 root root 64 8月 25 03:10 7f2548663000-7f25486c3000 -> /usr/lib64/libpcre.so.1.2.0 lr--------. 1 root root 64 8月 25 03:10 7f25486c3000-7f25488c3000 -> /usr/lib64/libpcre.so.1.2.0 lr--------. 1 root root 64 8月 25 03:10 7f25488c3000-7f25488c4000 -> /usr/lib64/libpcre.so.1.2.0 lr--------. 1 root root 64 8月 25 03:10 7f25488c4000-7f25488c5000 -> /usr/lib64/libpcre.so.1.2.0 lr--------. 1 root root 64 8月 25 03:10 7f25488c5000-7f2548a87000 -> /usr/lib64/libc-2.17.so lr--------. 1 root root 64 8月 25 03:10 7f2548a87000-7f2548c87000 -> /usr/lib64/libc-2.17.so lr--------. 1 root root 64 8月 25 03:10 7f2548c87000-7f2548c8b000 -> /usr/lib64/libc-2.17.so lr--------. 1 root root 64 8月 25 03:10 7f2548c8b000-7f2548c8d000 -> /usr/lib64/libc-2.17.so lr--------. 1 root root 64 8月 25 03:10 7f2548c92000-7f2548c99000 -> /usr/lib64/libacl.so.1.1.0 lr--------. 1 root root 64 8月 25 03:10 7f2548c99000-7f2548e99000 -> /usr/lib64/libacl.so.1.1.0 lr--------. 1 root root 64 8月 25 03:10 7f2548e99000-7f2548e9a000 -> /usr/lib64/libacl.so.1.1.0 lr--------. 1 root root 64 8月 25 03:10 7f2548e9a000-7f2548e9b000 -> /usr/lib64/libacl.so.1.1.0 lr--------. 1 root root 64 8月 25 03:10 7f2548e9b000-7f2548e9f000 -> /usr/lib64/libcap.so.2.22 lr--------. 1 root root 64 8月 25 03:10 7f2548e9f000-7f254909e000 -> /usr/lib64/libcap.so.2.22 lr--------. 1 root root 64 8月 25 03:10 7f254909e000-7f254909f000 -> /usr/lib64/libcap.so.2.22 lr--------. 1 root root 64 8月 25 03:10 7f254909f000-7f25490a0000 -> /usr/lib64/libcap.so.2.22 lr--------. 1 root root 64 8月 25 03:10 7f25490a0000-7f25490c4000 -> /usr/lib64/libselinux.so.1 lr--------. 1 root root 64 8月 25 03:10 7f25490c4000-7f25492c3000 -> /usr/lib64/libselinux.so.1 lr--------. 1 root root 64 8月 25 03:10 7f25492c3000-7f25492c4000 -> /usr/lib64/libselinux.so.1 lr--------. 1 root root 64 8月 25 03:10 7f25492c4000-7f25492c5000 -> /usr/lib64/libselinux.so.1 lr--------. 1 root root 64 8月 25 03:10 7f25492c7000-7f25492e9000 -> /usr/lib64/ld-2.17.so lr--------. 1 root root 64 8月 25 03:10 7f25494a6000-7f25494ad000 -> /usr/lib64/gconv/gconv-modules.cache lr--------. 1 root root 64 8月 25 03:10 7f25494ad000-7f25494dc000 -> /usr/share/locale/zh_CN/LC_TIME/coreutils.mo lr--------. 1 root root 64 8月 25 03:10 7f25494e8000-7f25494e9000 -> /usr/lib64/ld-2.17.so lr--------. 1 root root 64 8月 25 03:10 7f25494e9000-7f25494ea000 -> /usr/lib64/ld-2.17.so Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-12 "},"[pid]/maps.html":{"url":"[pid]/maps.html","title":"maps","keywords":"","body":"/proc/[pid]/maps 字段 字段 描述 address 进程中映射所占用的地址空间 perms 权限集： r = read w = write x = execute s = shared * p = private (copy on write) offset 文件或一切事物的偏移量 dev 设备号，格式：主设备号:副设备号。若 pathname 是伪路径，则为 00:00 inode 对应设备文件的 inode 。其中，0 表示没有 inode 与内存区域相关联，就像 BSS（未初始化数据段）那样。若 pathname 是伪路径，则为 0 pathname 通常是可映射的文件。对于 ELF 文件，可以通过查看 ELF 程序头（readelf-l）中的偏移字段轻松地与偏移字段进行协调。若该字段为空，则表示一个通过 mmap() 映射创建的匿名映射。额外伪路径： [stack]：初始化进程（亦称主线程）的栈 [stack:]：线程的栈（ 即线程 ID），对应于 /proc/[pid]/tasks/[tid]/ [vdso]：虚拟动态链接的共享对象 [heap]：进程的堆 示例 address perms offset dev inode pathname 00400000-00452000 r-xp 00000000 08:02 173521 /usr/bin/dbus-daemon 00651000-00652000 r--p 00051000 08:02 173521 /usr/bin/dbus-daemon 00652000-00655000 rw-p 00052000 08:02 173521 /usr/bin/dbus-daemon 00e03000-00e24000 rw-p 00000000 00:00 0 [heap] 00e24000-011f7000 rw-p 00000000 00:00 0 [heap] ... 35b1800000-35b1820000 r-xp 00000000 08:02 135522 /usr/lib64/ld-2.15.so 35b1a1f000-35b1a20000 r--p 0001f000 08:02 135522 /usr/lib64/ld-2.15.so 35b1a20000-35b1a21000 rw-p 00020000 08:02 135522 /usr/lib64/ld-2.15.so 35b1a21000-35b1a22000 rw-p 00000000 00:00 0 35b1c00000-35b1dac000 r-xp 00000000 08:02 135870 /usr/lib64/libc-2.15.so 35b1dac000-35b1fac000 ---p 001ac000 08:02 135870 /usr/lib64/libc-2.15.so 35b1fac000-35b1fb0000 r--p 001ac000 08:02 135870 /usr/lib64/libc-2.15.so 35b1fb0000-35b1fb2000 rw-p 001b0000 08:02 135870 /usr/lib64/libc-2.15.so ... f2c6ff8c000-7f2c7078c000 rw-p 00000000 00:00 0 [stack:986] ... 7fffb2c0d000-7fffb2c2e000 rw-p 00000000 00:00 0 [stack] 7fffb2d48000-7fffb2d49000 r-xp 00000000 00:00 0 [vdso] $ cat /proc/$$/maps ------------------- 00400000-004f0000 r-xp 00000000 08:11 3801155 /bin/bash 006ef000-006f0000 r--p 000ef000 08:11 3801155 /bin/bash 006f0000-006f9000 rw-p 000f0000 08:11 3801155 /bin/bash 006f9000-006ff000 rw-p 00000000 00:00 0 00c43000-0175d000 rw-p 00000000 00:00 0 [heap] 7f75c3928000-7f75c3932000 r-xp 00000000 08:11 4224737 /lib/x86_64-linux-gnu/libnss_files-2.19.so 7f75c3932000-7f75c3b31000 ---p 0000a000 08:11 4224737 /lib/x86_64-linux-gnu/libnss_files-2.19.so 7f75c3b31000-7f75c3b32000 r--p 00009000 08:11 4224737 /lib/x86_64-linux-gnu/libnss_files-2.19.so 7f75c3b32000-7f75c3b33000 rw-p 0000a000 08:11 4224737 /lib/x86_64-linux-gnu/libnss_files-2.19.so 7f75c3b33000-7f75c3b3e000 r-xp 00000000 08:11 4224725 /lib/x86_64-linux-gnu/libnss_nis-2.19.so 7f75c3b3e000-7f75c3d3d000 ---p 0000b000 08:11 4224725 /lib/x86_64-linux-gnu/libnss_nis-2.19.so 7f75c3d3d000-7f75c3d3e000 r--p 0000a000 08:11 4224725 /lib/x86_64-linux-gnu/libnss_nis-2.19.so 7f75c3d3e000-7f75c3d3f000 rw-p 0000b000 08:11 4224725 /lib/x86_64-linux-gnu/libnss_nis-2.19.so 7f75c3d3f000-7f75c3d56000 r-xp 00000000 08:11 4224741 /lib/x86_64-linux-gnu/libnsl-2.19.so 7f75c3d56000-7f75c3f55000 ---p 00017000 08:11 4224741 /lib/x86_64-linux-gnu/libnsl-2.19.so 7f75c3f55000-7f75c3f56000 r--p 00016000 08:11 4224741 /lib/x86_64-linux-gnu/libnsl-2.19.so 7f75c3f56000-7f75c3f57000 rw-p 00017000 08:11 4224741 /lib/x86_64-linux-gnu/libnsl-2.19.so 7f75c3f57000-7f75c3f59000 rw-p 00000000 00:00 0 7f75c3f59000-7f75c3f62000 r-xp 00000000 08:11 4224740 /lib/x86_64-linux-gnu/libnss_compat-2.19.so 7f75c3f62000-7f75c4161000 ---p 00009000 08:11 4224740 /lib/x86_64-linux-gnu/libnss_compat-2.19.so 7f75c4161000-7f75c4162000 r--p 00008000 08:11 4224740 /lib/x86_64-linux-gnu/libnss_compat-2.19.so 7f75c4162000-7f75c4163000 rw-p 00009000 08:11 4224740 /lib/x86_64-linux-gnu/libnss_compat-2.19.so 7f75c4163000-7f75c4845000 r--p 00000000 08:11 1842190 /usr/lib/locale/locale-archive 7f75c4845000-7f75c4a03000 r-xp 00000000 08:11 4224736 /lib/x86_64-linux-gnu/libc-2.19.so 7f75c4a03000-7f75c4c03000 ---p 001be000 08:11 4224736 /lib/x86_64-linux-gnu/libc-2.19.so 7f75c4c03000-7f75c4c07000 r--p 001be000 08:11 4224736 /lib/x86_64-linux-gnu/libc-2.19.so 7f75c4c07000-7f75c4c09000 rw-p 001c2000 08:11 4224736 /lib/x86_64-linux-gnu/libc-2.19.so 7f75c4c09000-7f75c4c0e000 rw-p 00000000 00:00 0 7f75c4c0e000-7f75c4c11000 r-xp 00000000 08:11 4224727 /lib/x86_64-linux-gnu/libdl-2.19.so 7f75c4c11000-7f75c4e10000 ---p 00003000 08:11 4224727 /lib/x86_64-linux-gnu/libdl-2.19.so 7f75c4e10000-7f75c4e11000 r--p 00002000 08:11 4224727 /lib/x86_64-linux-gnu/libdl-2.19.so 7f75c4e11000-7f75c4e12000 rw-p 00003000 08:11 4224727 /lib/x86_64-linux-gnu/libdl-2.19.so 7f75c4e12000-7f75c4e37000 r-xp 00000000 08:11 4198947 /lib/x86_64-linux-gnu/libtinfo.so.5.9 7f75c4e37000-7f75c5036000 ---p 00025000 08:11 4198947 /lib/x86_64-linux-gnu/libtinfo.so.5.9 7f75c5036000-7f75c503a000 r--p 00024000 08:11 4198947 /lib/x86_64-linux-gnu/libtinfo.so.5.9 7f75c503a000-7f75c503b000 rw-p 00028000 08:11 4198947 /lib/x86_64-linux-gnu/libtinfo.so.5.9 7f75c503b000-7f75c505e000 r-xp 00000000 08:11 4224733 /lib/x86_64-linux-gnu/ld-2.19.so 7f75c5239000-7f75c523d000 rw-p 00000000 00:00 0 7f75c5256000-7f75c525d000 r--s 00000000 08:11 2104076 /usr/lib/x86_64-linux-gnu/gconv/gconv-modules.cache 7f75c525d000-7f75c525e000 r--p 00022000 08:11 4224733 /lib/x86_64-linux-gnu/ld-2.19.so 7f75c525e000-7f75c525f000 rw-p 00023000 08:11 4224733 /lib/x86_64-linux-gnu/ld-2.19.so 7f75c525f000-7f75c5260000 rw-p 00000000 00:00 0 7ffc14e76000-7ffc14e97000 rw-p 00000000 00:00 0 [stack] 7ffc14fe8000-7ffc14feb000 r--p 00000000 00:00 0 [vvar] 7ffc14feb000-7ffc14fed000 r-xp 00000000 00:00 0 [vdso] ffffffffff600000-ffffffffff601000 r-xp 00000000 00:00 0 [vsyscall] Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-12 "},"[pid]/mem.html":{"url":"[pid]/mem.html","title":"mem","keywords":"","body":"/proc/[pid]/mem Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-12 "},"[pid]/mounts.html":{"url":"[pid]/mounts.html","title":"mounts","keywords":"","body":"/proc/[pid]/mounts $ cat /proc/self/mounts --------------------- sysfs /sys sysfs rw,nosuid,nodev,noexec,relatime 0 0 proc /proc proc rw,nosuid,nodev,noexec,relatime 0 0 udev /dev devtmpfs rw,relatime,size=16438356k,nr_inodes=4109589,mode=755 0 0 devpts /dev/pts devpts rw,nosuid,noexec,relatime,gid=5,mode=620,ptmxmode=000 0 0 tmpfs /run tmpfs rw,nosuid,noexec,relatime,size=3290144k,mode=755 0 0 /dev/disk/by-uuid/07003934-f200-4c54-a4bb-8c82093a285f / ext4 rw,relatime,errors=remount-ro,data=ordered 0 0 none /sys/fs/cgroup tmpfs rw,relatime,size=4k,mode=755 0 0 none /sys/fs/fuse/connections fusectl rw,relatime 0 0 none /sys/kernel/debug debugfs rw,relatime 0 0 none /sys/kernel/security securityfs rw,relatime 0 0 none /run/lock tmpfs rw,nosuid,nodev,noexec,relatime,size=5120k 0 0 none /run/shm tmpfs rw,nosuid,nodev,relatime 0 0 none /run/user tmpfs rw,nosuid,nodev,noexec,relatime,size=102400k,mode=755 0 0 none /sys/fs/pstore pstore rw,relatime 0 0 cgroup /sys/fs/cgroup/cpuset cgroup rw,relatime,cpuset 0 0 cgroup /sys/fs/cgroup/cpu cgroup rw,relatime,cpu 0 0 cgroup /sys/fs/cgroup/cpuacct cgroup rw,relatime,cpuacct 0 0 cgroup /sys/fs/cgroup/blkio cgroup rw,relatime,blkio 0 0 cgroup /sys/fs/cgroup/memory cgroup rw,relatime,memory 0 0 cgroup /sys/fs/cgroup/devices cgroup rw,relatime,devices 0 0 cgroup /sys/fs/cgroup/freezer cgroup rw,relatime,freezer 0 0 cgroup /sys/fs/cgroup/net_cls cgroup rw,relatime,net_cls 0 0 cgroup /sys/fs/cgroup/perf_event cgroup rw,relatime,perf_event 0 0 cgroup /sys/fs/cgroup/net_prio cgroup rw,relatime,net_prio 0 0 cgroup /sys/fs/cgroup/hugetlb cgroup rw,relatime,hugetlb 0 0 cgroup /sys/fs/cgroup/pids cgroup rw,relatime,pids 0 0 /dev/sda1 /home/yin/mnt/sda1 xfs rw,relatime,attr2,inode64,noquota 0 0 rpc_pipefs /run/rpc_pipefs rpc_pipefs rw,relatime 0 0 binfmt_misc /proc/sys/fs/binfmt_misc binfmt_misc rw,nosuid,nodev,noexec,relatime 0 0 systemd /sys/fs/cgroup/systemd cgroup rw,nosuid,nodev,noexec,relatime,name=systemd 0 0 cgroup /sys/fs/cgroup/dsystemd cgroup rw,nosuid,nodev,noexec,relatime,xattr,release_agent=/lib/systemd/systemd-cgroups-agent,name=dsystemd 0 0 /dev/loop0 /snap/spotify/16 squashfs ro,nodev,relatime 0 0 /dev/loop1 /snap/electronic-wechat/7 squashfs ro,nodev,relatime 0 0 /dev/loop2 /snap/redis-desktop-manager/85 squashfs ro,nodev,relatime 0 0 /dev/loop3 /snap/core/4830 squashfs ro,nodev,relatime 0 0 /dev/loop4 /snap/spotify/19 squashfs ro,nodev,relatime 0 0 /dev/loop5 /snap/redis-desktop-manager/31 squashfs ro,nodev,relatime 0 0 /dev/loop6 /snap/core/5145 squashfs ro,nodev,relatime 0 0 /dev/loop7 /snap/core/4917 squashfs ro,nodev,relatime 0 0 none /var/lib/docker/aufs/mnt/bebc62390ef69a12d8cabe30d3e54b8f52a1c3ad04ea8f48d6668c4339ddd2dd aufs rw,relatime,si=8333b5d5a41a6c87,dio,dirperm1 0 0 none /var/lib/docker/aufs/mnt/afa79135a17d845554954f0f6eea5afcab2de0a92488160b87a084a7f79c992f aufs rw,relatime,si=8333b5d2be876c87,dio,dirperm1 0 0 none /var/lib/docker/aufs/mnt/aa08bb63bcdc391e39c7a2875531abd54f00b6cad334e9f07d995e7214a2b88a aufs rw,relatime,si=8333b5d2be875c87,dio,dirperm1 0 0 nsfs /run/docker/netns/default nsfs rw 0 0 shm /var/lib/docker/containers/86e99aeb720052fea4c57bcc70f6f6aef053692bd9b579148e729fbb6d323e49/mounts/shm tmpfs rw,nosuid,nodev,noexec,relatime,size=65536k 0 0 shm /var/lib/docker/containers/05c4dd21fa48269ac669df91bf7b04f3e7f2ff83009b898942834be06115d6b9/mounts/shm tmpfs rw,nosuid,nodev,noexec,relatime,size=65536k 0 0 shm /var/lib/docker/containers/7d0f47463f27717a3836adab0b200d654e4d4bf021dfbcbbb8645b7ae8599f6d/mounts/shm tmpfs rw,nosuid,nodev,noexec,relatime,size=65536k 0 0 vmware-vmblock /run/vmblock-fuse fuse.vmware-vmblock rw,nosuid,nodev,relatime,user_id=0,group_id=0,default_permissions,allow_other 0 0 gvfsd-fuse /run/user/1000/gvfs fuse.gvfsd-fuse rw,nosuid,nodev,relatime,user_id=1000,group_id=1000 0 0 /dev/sdd4 /media/yin/Ubuntu\\04014.0 vfat rw,nosuid,nodev,relatime,uid=1000,gid=1000,fmask=0022,dmask=0077,codepage=437,iocharset=iso8859-1,shortname=mixed,showexec,utf8,flush,errors=remount-ro 0 0 none /var/lib/docker/aufs/mnt/83e31eca7296e99f712537a69dc5ed8a7adde7c72dd674977792a1f0e9a7f70f aufs rw,relatime,si=8333b5d250c17c87,dio,dirperm1 0 0 shm /var/lib/docker/containers/18400ac53cea550a4a10adc001d2a43e9a5af550ec7b151ebe92e553cbe9b20c/mounts/shm tmpfs rw,nosuid,nodev,noexec,relatime,size=65536k 0 0 /dev/sda3 /media/yin/7456B33F56B30142 fuseblk rw,nosuid,nodev,relatime,user_id=0,group_id=0,default_permissions,allow_other,blksize=4096 0 0 /dev/sda2 /media/yin/000B3CE60003997E fuseblk rw,nosuid,nodev,relatime,user_id=0,group_id=0,default_permissions,allow_other,blksize=4096 0 0 Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-12 "},"[pid]/smaps.html":{"url":"[pid]/smaps.html","title":"smaps","keywords":"","body":"/proc/[pid]/smaps 显示每个进程映射的内存消耗。 示例 # 每个映射包含类似如下的一系列行 $ cat /proc/self/smaps 00400000-0040b000 r-xp 00000000 fd:01 12613123 /usr/bin/cat Size: 44 kB Rss: 28 kB Pss: 28 kB Shared_Clean: 0 kB Shared_Dirty: 0 kB Private_Clean: 28 kB Private_Dirty: 0 kB Referenced: 28 kB Anonymous: 0 kB AnonHugePages: 0 kB Swap: 0 kB KernelPageSize: 4 kB MMUPageSize: 4 kB Locked: 0 kB VmFlags: rd ex mr mp me dw sd ...... 01296000-012b7000 rw-p 00000000 00:00 0 [heap] Size: 132 kB Rss: 12 kB Pss: 12 kB Shared_Clean: 0 kB Shared_Dirty: 0 kB Private_Clean: 0 kB Private_Dirty: 12 kB Referenced: 12 kB Anonymous: 12 kB AnonHugePages: 0 kB Swap: 0 kB KernelPageSize: 4 kB MMUPageSize: 4 kB Locked: 0 kB VmFlags: rd wr mr mp me ac sd ....... Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-12 "},"[pid]/stat.html":{"url":"[pid]/stat.html","title":"stat","keywords":"","body":"/proc/[pid]/stat Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-12 "},"[pid]/status.html":{"url":"[pid]/status.html","title":"status","keywords":"","body":"/proc/[pid]/status 该文件内容随时间而改变，解析内容时应当查找特殊字符串（如 PPid）来匹配行记录，而不是使用行号 $ cat /proc/self/status ----------------------- Name: cat # 进程名 State: R (running) # 进程状态：running Tgid: 86487 # 线程组 ID，一个线程一定属于一个线程组（进程组） Ngid: 0 Pid: 86487 # 当前进程的 ID PPid: 55292 # 当前进程的父进程的 ID TracerPid: 0 # 追踪当前进程的进程的 ID；如果是 0，表示没有追踪 Uid: 1000 1000 1000 1000 # 依次是 RUID、EUID、SUID、FSUID Gid: 1000 1000 1000 1000 # FDSize: 256 # 文件描述符大小 Groups: 4 24 27 30 46 108 124 127 133 143 999 1000 NStgid: 86487 NSpid: 86487 NSpgid: 86487 NSsid: 55292 VmPeak: 11424 kB VmSize: 11424 kB VmLck: 0 kB VmPin: 0 kB VmHWM: 716 kB VmRSS: 716 kB VmData: 188 kB VmStk: 132 kB VmExe: 44 kB VmLib: 1924 kB VmPTE: 44 kB # 占用的页表的大小 VmPMD: 12 kB VmSwap: 0 kB HugetlbPages: 0 kB Threads: 1 SigQ: 0/128424 SigPnd: 0000000000000000 ShdPnd: 0000000000000000 SigBlk: 0000000000000000 SigIgn: 0000000000000000 SigCgt: 0000000000000000 CapInh: 0000000000000000 CapPrm: 0000000000000000 CapEff: 0000000000000000 CapBnd: 0000003fffffffff CapAmb: 0000000000000000 Seccomp: 0 Cpus_allowed: f Cpus_allowed_list: 0-3 Mems_allowed: 00000000,00000001 Mems_allowed_list: 0 voluntary_ctxt_switches: 0 nonvoluntary_ctxt_switches: 0 剖析 TracerPid # [窗口 1] # 追踪 top 程序 $ strace top # [窗口 2] $ ps -ef | grep \"[t]op\" root 3811608 2645745 1 09:12 pts/32 00:00:10 strace top # strace 进程的 PID=3811608 root 3811611 3811608 1 09:12 pts/32 00:00:06 top # top 进程的 PID=3811611，父进程为 strace 进程 $ cat /proc/3811611/status | grep TracerPid TracerPid: 3811608 # strace 进程的 PID 参考 Linux 下进程信息 /proc/pid/status 的深入分析 Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-12 "},"[pid]/task/":{"url":"[pid]/task/","title":"task","keywords":"","body":"/proc/[pid]/task/ 线程目录：/proc/[pid]/task/[tid]，该目录有一套类似于 /proc/[pid] 目录内容的文件和目录。因为线程共享了多个属性，所以这些文件中的许多信息对进程中各个线程而言都是相同的。 Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-12 "},"acpi/wakeup.html":{"url":"acpi/wakeup.html","title":"wakeup","keywords":"","body":"/proc/acpi/wakeup Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-12 "},"asound/":{"url":"asound/","title":".","keywords":"","body":"/proc/asound Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-12 "},"asound/cards.html":{"url":"asound/cards.html","title":"cards","keywords":"","body":"/proc/asound/cards Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-12 "},"asound/devices.html":{"url":"asound/devices.html","title":"devices","keywords":"","body":"/proc/asound/devices Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-12 "},"asound/hwdep.html":{"url":"asound/hwdep.html","title":"hwdep","keywords":"","body":"/proc/asound/hwdep Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-12 "},"asound/modules.html":{"url":"asound/modules.html","title":"modules","keywords":"","body":"/proc/asound/modules Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-12 "},"asound/pcm.html":{"url":"asound/pcm.html","title":"pcm","keywords":"","body":"/proc/asound/pcm Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-12 "},"asound/timers.html":{"url":"asound/timers.html","title":"timers","keywords":"","body":"/proc/asound/timers Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-12 "},"asound/version.html":{"url":"asound/version.html","title":"version","keywords":"","body":"/proc/asound/version Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-12 "},"bus/":{"url":"bus/","title":".","keywords":"","body":"/proc/bus 子文件或子目录 描述 /proc/bus/ 计算机的各种总线 /proc/bus/input/ 输入总线，如：USB /proc/bus/pci/ PCI 总线 /proc/bus/input $ cat /proc/bus/input/devices ----------------------------- I: Bus=0019 Vendor=0000 Product=0001 Version=0000 N: Name=\"Power Button\" P: Phys=PNP0C0C/button/input0 S: Sysfs=/devices/LNXSYSTM:00/LNXSYBUS:00/PNP0C0C:00/input/input0 U: Uniq= H: Handlers=kbd event0 B: PROP=0 B: EV=3 B: KEY=10000000000000 0 I: Bus=0019 Vendor=0000 Product=0001 Version=0000 N: Name=\"Power Button\" P: Phys=LNXPWRBN/button/input0 S: Sysfs=/devices/LNXSYSTM:00/LNXPWRBN:00/input/input1 U: Uniq= H: Handlers=kbd event1 B: PROP=0 B: EV=3 B: KEY=10000000000000 0 I: Bus=0003 Vendor=18f8 Product=0f99 Version=0110 N: Name=\"USB OPTICAL MOUSE \" P: Phys=usb-0000:00:14.0-3/input0 S: Sysfs=/devices/pci0000:00/0000:00:14.0/usb3/3-3/3-3:1.0/0003:18F8:0F99.0001/input/input5 U: Uniq= H: Handlers=mouse0 event2 B: PROP=0 B: EV=17 B: KEY=1f0000 0 0 0 0 B: REL=103 B: MSC=10 I: Bus=0003 Vendor=18f8 Product=0f99 Version=0110 N: Name=\"USB OPTICAL MOUSE \" P: Phys=usb-0000:00:14.0-3/input1 S: Sysfs=/devices/pci0000:00/0000:00:14.0/usb3/3-3/3-3:1.1/0003:18F8:0F99.0002/input/input6 U: Uniq= H: Handlers=sysrq kbd event3 B: PROP=0 B: EV=10001f B: KEY=3007f 0 0 483ffff17aff32d bf54444600000000 1 130f938b17c000 677bfad9415fed e09effdf01cfffff fffffffffffffffe B: REL=40 B: ABS=100000000 B: MSC=10 I: Bus=0003 Vendor=04d9 Product=a0cd Version=0111 N: Name=\"USB Keyboard\" P: Phys=usb-0000:00:14.0-4/input0 S: Sysfs=/devices/pci0000:00/0000:00:14.0/usb3/3-4/3-4:1.0/0003:04D9:A0CD.0003/input/input7 U: Uniq= H: Handlers=sysrq kbd event4 leds B: PROP=0 B: EV=120013 B: KEY=1000000000007 ff800000000007ff febeffdff3cfffff fffffffffffffffe B: MSC=10 B: LED=7 I: Bus=0003 Vendor=04d9 Product=a0cd Version=0111 N: Name=\"USB Keyboard\" P: Phys=usb-0000:00:14.0-4/input1 S: Sysfs=/devices/pci0000:00/0000:00:14.0/usb3/3-4/3-4:1.1/0003:04D9:A0CD.0004/input/input8 U: Uniq= H: Handlers=sysrq kbd event5 B: PROP=0 B: EV=10001f B: KEY=3f0003007f 0 0 483ffff17aff32d bf54444600000000 1 130f938b17c000 677bfad941dfed e0beffdf01cfffff fffffffffffffffe B: REL=40 B: ABS=100000000 B: MSC=10 I: Bus=0000 Vendor=0000 Product=0000 Version=0000 N: Name=\"HDA Intel PCH Rear Mic\" P: Phys=ALSA S: Sysfs=/devices/pci0000:00/0000:00:1b.0/sound/card0/input9 U: Uniq= H: Handlers=event6 B: PROP=0 B: EV=21 B: SW=10 I: Bus=0000 Vendor=0000 Product=0000 Version=0000 N: Name=\"HDA Intel PCH Front Mic\" P: Phys=ALSA S: Sysfs=/devices/pci0000:00/0000:00:1b.0/sound/card0/input10 U: Uniq= H: Handlers=event7 B: PROP=0 B: EV=21 B: SW=10 I: Bus=0000 Vendor=0000 Product=0000 Version=0000 N: Name=\"HDA Intel PCH Line Out\" P: Phys=ALSA S: Sysfs=/devices/pci0000:00/0000:00:1b.0/sound/card0/input11 U: Uniq= H: Handlers=event8 B: PROP=0 B: EV=21 B: SW=40 I: Bus=0000 Vendor=0000 Product=0000 Version=0000 N: Name=\"HDA Intel PCH Front Headphone\" P: Phys=ALSA S: Sysfs=/devices/pci0000:00/0000:00:1b.0/sound/card0/input12 U: Uniq= H: Handlers=event9 B: PROP=0 B: EV=21 B: SW=4 I: Bus=0000 Vendor=0000 Product=0000 Version=0000 N: Name=\"HDA NVidia HDMI/DP,pcm=3\" P: Phys=ALSA S: Sysfs=/devices/pci0000:00/0000:00:01.0/0000:01:00.1/sound/card1/input13 U: Uniq= H: Handlers=event10 B: PROP=0 B: EV=21 B: SW=140 I: Bus=0000 Vendor=0000 Product=0000 Version=0000 N: Name=\"HDA NVidia HDMI/DP,pcm=7\" P: Phys=ALSA S: Sysfs=/devices/pci0000:00/0000:00:01.0/0000:01:00.1/sound/card1/input14 U: Uniq= H: Handlers=event11 B: PROP=0 B: EV=21 B: SW=140 I: Bus=0000 Vendor=0000 Product=0000 Version=0000 N: Name=\"HDA NVidia HDMI/DP,pcm=8\" P: Phys=ALSA S: Sysfs=/devices/pci0000:00/0000:00:01.0/0000:01:00.1/sound/card1/input15 U: Uniq= H: Handlers=event12 B: PROP=0 B: EV=21 B: SW=140 $ cat /proc/bus/input/handlers ------------------------------ N: Number=0 Name=rfkill N: Number=1 Name=kbd N: Number=2 Name=sysrq (filter) N: Number=3 Name=mousedev Minor=32 N: Number=4 Name=evdev Minor=64 N: Number=5 Name=joydev Minor=0 N: Number=6 Name=leds /proc/bus/pci/devices $ cat /proc/bus/pci/devices --------------------------- 0000 80860100 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 snb_uncore 0008 80860101 18 0 0 0 0 0 0 0 0 0 0 0 0 0 0 pcieport 00a0 80861e31 19 f7120004 0 0 0 0 0 0 10000 0 0 0 0 0 0 xhci_hcd 00b0 80861e3a 1c f713c004 0 0 0 0 0 0 10 0 0 0 0 0 0 mei_me 00c8 80861502 1b f7100000 f7139000 f041 0 0 0 0 20000 1000 20 0 0 0 0 e1000e 00d0 80861e2d 10 f7138000 0 0 0 0 0 0 400 0 0 0 0 0 0 ehci-pci 00d8 80861e20 1e f7130004 0 0 0 0 0 0 4000 0 0 0 0 0 0 snd_hda_intel 00e8 80861e26 17 f7137000 0 0 0 0 0 0 400 0 0 0 0 0 0 ehci-pci 00f0 8086244e 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 00f8 80861e47 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 lpc_ich 00fa 80862822 1a f091 f081 f071 f061 f021 f7136000 0 8 4 8 4 20 800 0 ahci 00fb 80861e22 5 f7135004 0 0 0 f001 0 0 100 0 0 0 20 0 0 0100 10de0fc2 1d f6000000 e000000c 0 f000000c 0 e001 f7000002 1000000 10000000 0 2000000 0 80 80000 nouveau 0101 10de0e1b 11 f7080000 0 0 0 0 0 0 4000 0 0 0 0 0 0 snd_hda_intel Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-12 "},"bus/input/devices.html":{"url":"bus/input/devices.html","title":"devices","keywords":"","body":"/proc/bus/input/devices Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-12 "},"bus/input/handlers.html":{"url":"bus/input/handlers.html","title":"handlers","keywords":"","body":"/proc/bus/input/handlers Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-12 "},"bus/pci/devices.html":{"url":"bus/pci/devices.html","title":"devices","keywords":"","body":"/proc/bus/pci/devices Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-12 "},"driver/rtc.html":{"url":"driver/rtc.html","title":"rtc","keywords":"","body":"/proc/driver/rtc Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-12 "},"fs/":{"url":"fs/","title":".","keywords":"","body":"/proc/fs 包含当前内核支持的各类文件系统的参数 Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-12 "},"scsi/device_info.html":{"url":"scsi/device_info.html","title":"device","keywords":"","body":"/proc/scsi/device_info Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-12 "},"scsi/scsi.html":{"url":"scsi/scsi.html","title":"scsi","keywords":"","body":"/proc/scsi/scsi 参考 SCSI Standards Architecture Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-12 "},"sys/":{"url":"sys/","title":".","keywords":"","body":"/proc/sys sysctl 作用于该目录。 $ sysctl -a $ ls -l /proc/sys 4026531855 dr-xr-xr-x 1 root root 0 7月 22 10:10 ./ 1 dr-xr-xr-x 313 root root 0 7月 22 10:09 ../ 29728495 dr-xr-xr-x 1 root root 0 7月 22 13:35 abi/ 29728496 dr-xr-xr-x 1 root root 0 7月 22 13:35 debug/ 16861 dr-xr-xr-x 1 root root 0 7月 22 02:10 dev/ 8612 dr-xr-xr-x 1 root root 0 7月 22 02:10 fs/ 29728497 dr-xr-xr-x 1 root root 0 7月 22 13:35 fscache/ 10453 dr-xr-xr-x 1 root root 0 7月 22 10:10 kernel/ 7609 dr-xr-xr-x 1 root root 0 7月 22 02:10 net/ 29728498 dr-xr-xr-x 1 root root 0 7月 22 13:35 sunrpc/ 7636 dr-xr-xr-x 1 root root 0 7月 22 02:10 vm/ 参考 Documentation for /proc/sys Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-12 "},"sys/abi/":{"url":"sys/abi/","title":"abi","keywords":"","body":"/proc/sys/abi/ 应用程序二进制接口（ABI） Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-12 "},"sys/kernel/pid_max.html":{"url":"sys/kernel/pid_max.html","title":"pid_max","keywords":"","body":"/proc/sys/kernel/pid_max Linux 进程号（PID）的默认上限是 32767 。当 PID 达到 32767 ，系统会将 PID 重置为 300 ，而不是 1 ，因为低数值的 PID 几乎被系统进程和守护进程所长期占用，在此范围内搜索尚未被使用的 PID 等于浪费时间。 不过，可以通过 /proc/sys/kernel/pid_max 文件修改 PID 的上限（其值 = 最大进程号 + 1） Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-12 "},"sys/net/ipv4/ip_forward.html":{"url":"sys/net/ipv4/ip_forward.html","title":"ip_forward","keywords":"","body":"/proc/sys/net/ipv4/ip_forward Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-12 "},"sys/vm/drop_caches.html":{"url":"sys/vm/drop_caches.html","title":"drop_caches","keywords":"","body":"/proc/sys/vm/drop_caches 写入数值（1、2、3）到此文件，以使内核释放内存中的 cache、dentry 和 inode，从而使内存空闲出来。 值含义 值 描述 0 默认值，不做任何操作 1 释放页缓存（page cache） 2 释放 dentry 和 inode 3 释放页缓存、dentry 和 inode 为了避免内存中的数据丢失，必须首先执行 sync 命令将内存数据刷新至磁盘。 示例 # 释放页缓存 $ sync && echo 1 > /proc/sys/vm/drop_caches # 释放 dentry 和 inode $ sync && echo 2 > /proc/sys/vm/drop_caches # 释放页缓存、dentry 和 inode $ sync && echo 3 > /proc/sys/vm/drop_caches Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-12 "},"sysvipc/msg.html":{"url":"sysvipc/msg.html","title":"msg","keywords":"","body":"/proc/sysvipc/msg Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-12 "},"sysvipc/sem.html":{"url":"sysvipc/sem.html","title":"sem","keywords":"","body":"/proc/sysvipc/sem Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-12 "},"sysvipc/shm.html":{"url":"sysvipc/shm.html","title":"shm","keywords":"","body":"/proc/sysvipc/shm Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-12 "},"tty/drivers.html":{"url":"tty/drivers.html","title":"drivers","keywords":"","body":"/proc/tty/drivers Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-12 "},"tty/ldiscs.html":{"url":"tty/ldiscs.html","title":"ldiscs","keywords":"","body":"/proc/tty/ldiscs Copyright © 2019-2020 | CC BY-NC-SA 4.0 相关网站: 知识库 微架构师 快速入门            更新于 2020-03-12 "}}